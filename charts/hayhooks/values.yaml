# Default values for hayhooks.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

hayhooks:
  # Base path under which the Hayhooks service is served.
  # This is used to correctly resolve API endpoints when behind an Ingress.
  # Example: if you want to serve Hayhooks at http://<host>/haystack, set rootPath to "/haystack"
  rootPath: ""

image:
  repository: deepset/hayhooks
  # Default pull policy. Recommended: "IfNotPresent" for specific version tags,
  # "Always" if using "main" or other frequently updated tags.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the latest stable Helm Chart version.
  # Specify "main" and pullPolicy: Always to track the latest development version.
  tag: "v0.6.0"

pipelinesDirMount: "/opt/pipelines"

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}
runtimeClassName: ""
envVariables: {}

# Allows defining additional environment variables, including those using valueFrom (e.g., secrets)
# Example:
# extraEnvVars:
#   - name: MY_VARIABLE
#     value: "my_value"
#   - name: OPENAI_API_KEY
#     valueFrom:
#       secretKeyRef:
#         name: openai-secret
#         key: api-key
extraEnvVars: []

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  port: 1416

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths:
        - path: /(.*)
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /status
    port: http
readinessProbe:
  httpGet:
    path: /status
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false
# - name: local-data # Example hostPath Volume
#   hostPath:
#     path: /data # path on the host
#     type: Directory # or DirectoryOrCreate

# Additional volumeMounts on the output Deployment definition.
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
# - name: local-data # Example hostPath mount
#   mountPath: /mnt/data # path in the container
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
